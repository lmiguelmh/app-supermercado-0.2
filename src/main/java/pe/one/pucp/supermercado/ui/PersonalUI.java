package pe.one.pucp.supermercado.ui;

import org.springframework.beans.factory.annotation.Autowired;
import pe.one.pucp.supermercado.controller.PersonalUIController;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Created with IntelliJ IDEA.
 * User: lmiguelmh
 * Date: 21/10/14
 * Time: 12:52 AM
 * To change this template use File | Settings | File Templates.
 */
@org.springframework.stereotype.Component
public class PersonalUI {
    private JPanel mainPanel;
    private JTable personalTable;
    private JTextField codigoTextField;
    private JTextField nombreTextField;
    private JCheckBox estadoCheckBox;
    private JButton insertarActualizarButton;
    private JButton nuevoButton;
    private JButton randomButton;
    private JButton eliminarButton;

    @Autowired
    PersonalUIController controller;

    public PersonalUI() {
        insertarActualizarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                controller.insertarClick();
            }
        });

        /*
        personalTable.getModel().addTableModelListener(new TableModelListener() {
            public void tableChanged(TableModelEvent e) {
                if(e.getType() == e.UPDATE){
                    System.out.println(e.getColumn());
                    System.out.println(e.getFirstRow());
                    System.out.println(e.getLastRow());
                }
            }
        });
        */
        personalTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                controller.tableSelectionChanged();
            }
        });
        nuevoButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                controller.nuevoClick();
            }
        });
        randomButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                controller.randomClick();
            }
        });
        eliminarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                controller.eliminarClick();
            }
        });
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public String getCodigo() {
        return codigoTextField.getText();
    }

    public void setCodigo(String codigo) {
        codigoTextField.setText(codigo);
    }

    public String getNombre() {
        return nombreTextField.getText();
    }

    public void setNombre(String nombre) {
        nombreTextField.setText(nombre);
    }

    public boolean getEstado() {
        return estadoCheckBox.isSelected();
    }

    public void setEstado(boolean estado) {
        estadoCheckBox.setSelected(estado);
    }

    public void setTableModel(TableModel tableModel) {
        personalTable.setModel(tableModel);
    }

    public int getSelectedRow() {
        return personalTable.getSelectedRow();
    }

    public Object getSelectedCodigo() {
        int row = getSelectedRow();
        if (row >= 0) {
            return personalTable.getModel().getValueAt(getSelectedRow(), 0);
        }
        return null;
    }

    public void setFocusInCodigo() {
        codigoTextField.requestFocus();
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5), null));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        mainPanel.add(panel1, BorderLayout.CENTER);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel1.add(panel2, BorderLayout.NORTH);
        final JLabel label1 = new JLabel();
        label1.setText("CÃ³digo");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label1, gbc);
        codigoTextField = new JTextField();
        codigoTextField.setPreferredSize(new Dimension(200, 28));
        codigoTextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(codigoTextField, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Nombre");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label2, gbc);
        nombreTextField = new JTextField();
        nombreTextField.setPreferredSize(new Dimension(200, 28));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(nombreTextField, gbc);
        estadoCheckBox = new JCheckBox();
        estadoCheckBox.setText("Activo");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(estadoCheckBox, gbc);
        insertarActualizarButton = new JButton();
        insertarActualizarButton.setText("Insertar");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(insertarActualizarButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel2.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel2.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(spacer4, gbc);
        randomButton = new JButton();
        randomButton.setText("Random");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(randomButton, gbc);
        nuevoButton = new JButton();
        nuevoButton.setText("Nuevo");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(nuevoButton, gbc);
        eliminarButton = new JButton();
        eliminarButton.setText("Eliminar");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(eliminarButton, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        panel1.add(panel3, BorderLayout.CENTER);
        panel3.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel3.add(scrollPane1, BorderLayout.CENTER);
        personalTable = new JTable();
        personalTable.setAutoCreateRowSorter(true);
        scrollPane1.setViewportView(personalTable);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout(0, 0));
        mainPanel.add(panel4, BorderLayout.SOUTH);
        final JLabel label3 = new JLabel();
        label3.setHorizontalAlignment(0);
        label3.setHorizontalTextPosition(0);
        label3.setText("PUCP 2014");
        panel4.add(label3, BorderLayout.CENTER);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
